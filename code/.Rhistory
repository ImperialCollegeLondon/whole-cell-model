closeAllConnections()
source('~/Dropbox/PhD-work/git-code/whole-cell-model/code/process-param-sweep.R')
e<-tryCatch({expr=assign("line_num",countLines(filename))},
error = function(e){},
warning= function(w){})
error
e
test1<- countLines(filename)
setwd("~/Dropbox/PhD-work/git-code/whole-cell-model/code")
read.csv("../data/0.1/param-sweep-0.1-0.1-0.1-0.1-0.1-0.1-0.1-0.1-0.1.csv")
e<-tryCatch({expr=assign("line_num",countLines(filename))},
error = function(e){},
warning= function(w){})
line_num
e
e[1]
typeof(e[1])
# print("reading in data")
raw_data<- read.csv(filename,header = F, skip = (line_num-1))
View(raw_data)
current_vals<- data.frame(raw_data$V14,raw_data$V23,i1,i2,i3,i4,i5,i6,i7,i8,i9)
important_data <- rbind(important_data,current_vals, stringsAsFactors= FALSE)
View(raw_data)
View(important_data)
colnames(important_data)<- c("AminoAcid","ATP","k_cat_AA","k_a_NH4","k_a","k_NH4","k_a_AA","k_NH4_AA","k_ribo_a","k_ribo_a_AA","k_ribo_AA_a")
View(important_data)
View(current_vals)
View(raw_data)
important_data <- data.frame(matrix(data = NA, nrow=0, ncol = 12))
e=NULL
for (i1 in c('0.1')){#,'1.0','10.0','100.0','1000.0')){
for (i2 in c('0.1')){#,'1.0','10.0','100.0','1000.0')){
for (i3 in c('0.1')){#,'1.0','10.0','100.0','1000.0')){
for (i4 in c('0.1')){#,'1.0','10.0','100.0','1000.0')){
for (i5 in c('0.1')){#,'1.0','10.0','100.0','1000.0')){
for (i6 in c('0.1')){#,'1.0','10.0','100.0','1000.0')){
for (i7 in c('0.1')){#,'1.0','10.0','100.0','1000.0')){
for (i8 in c('0.1','1.0','10.0','100.0','1000.0')){
for (i9 in c('0.1','1.0','10.0','100.0','1000.0')){
filename<- paste("../data/",i1,"/param-sweep-",i1,"-",i2,"-",i3,"-",i4,"-",i5,"-",i6,"-",i7,"-",i8,"-",i9,".csv", sep = "")
e<-tryCatch({expr=assign("line_num",countLines(filename))},
error = function(e){},
warning= function(w){})
# e<-tryCatch({expr=assign("line_num",countLines(filename))},
#             error = function(e) e,
#             warning= function(w) w)
# ,finally = next)
if (typeof(e[1]) != "integer" ){
# print("file doesnt exist")
next
}else{
# print("reading in data")
raw_data<- read.csv(filename,header = F, skip = (line_num-1))
# print("data read in")
current_vals<- data.frame(raw_data$V14,raw_data$V23,i1,i2,i3,i4,i5,i6,i7,i8,i9)
important_data <- rbind(important_data,current_vals, stringsAsFactors= FALSE)
next
}
# raw_data<- read.csv("../data/param-sweep-0.1-0.1-0.1-0.1-0.1-0.1-0.1-0.1-10.0-100.0.csv")#, skip = (line_num-5))
# raw_data = raw_data[,-c(1)]
#
#
# unsorted_colnames<- names(raw_data)
# shortened_colnames<-substring(unsorted_colnames,6)
# sorted_data= raw_data[,order(names(raw_data))]
# raw_data<- read.csv("../data/param-sweep-0.1-0.1-0.1-0.1-0.1-0.1-0.1-0.1-10.0-100.0.csv",header = F, skip = (line_num-1))
# raw_data = raw_data[,-c(1)]
# colnames(raw_data)<- shortened_colnames
# sorted_data<-raw_data[,c("tamp","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25")]
# colnames(sorted_data)= c("timestep","1S_external","2ribo mrna comp","3metab enzyme","4housekpng mrna comp","5trans mrna comp","6transporter prot","7metab mrna comp","8trans mrna","9metab mrna","10housekepng prot","11si","12housekpng mrna","13ribo mrna","14free ribo","15NH4 int","16nit mrna","17nit mrna comp","18nitrogenase","19cumulative NH4","20num cells","21ATP","22AA","23AA prot","24AA mRNA","25AA mrna comp")
# melted_data<- melt(sorted_again, id.var="timestep")
# melted_data['log_molecules']= log(melted_data['value']+0.1)
# param_values<-
# important_data <- data.frame(raw_data$V14,raw_data$V23)
# colnames(important_data)<- c("AminoAcid","ATP")
}}}}}}}}}
View(important_data)
source('~/Dropbox/PhD-work/git-code/whole-cell-model/code/process-param-sweep.R')
source('~/Dropbox/PhD-work/git-code/whole-cell-model/code/process-param-sweep.R')
View(important_data)
source('~/Dropbox/PhD-work/git-code/whole-cell-model/code/process-param-sweep.R')
closeAllConnections()
closeAllConnections()
source('~/Dropbox/PhD-work/git-code/whole-cell-model/code/process-param-sweep.R')
colnames(important_data)<- c("AminoAcid","ATP","k_cat_AA","k_a_NH4","k_a","k_NH4","k_a_AA","k_NH4_AA","k_ribo_a","k_ribo_a_AA","k_ribo_AA_a")
View(important_data)
closeAllConnections()
source('~/Dropbox/PhD-work/git-code/whole-cell-model/code/process-param-sweep.R')
important_data<- important_data[-1]
#need to append to file not overwrite it!!!#
write.csv(important_data, file = "param-sweep2-results.csv")
View(important_data)
important_data <- read.csv("param-sweep2-results.csv")
View(important_data)
source('~/Dropbox/PhD-work/git-code/whole-cell-model/code/process-param-sweep.R')
#need to append to file not overwrite it!!!#
write.csv(important_data, file = "param-sweep2-results.csv")
non_neg_data <- subset(important_data, important_data$AminoAcid >= 0 & important_data$ATP >= 0)
non_neg_data$log_AA<- log(non_neg_data$AminoAcid)
non_neg_data$log_ATP<- log(non_neg_data$ATP)
plt <- ggplot(data = non_neg_data, aes(x = k_ribo_AA_a, y = k_ribo_a_AA, colour = AminoAcid)) +geom_point() +facet_grid(rows = non_neg_data$k_ribo_a)
plt
# plot(x = important_data$k_ribo_AA_a, y = important_data$k_ribo_a_AA, col = important_data$AminoAcid)
plot(x = non_neg_data$AminoAcid, y = non_neg_data$ATP)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP)
hist(x = non_neg_data$log_ATP)
hist(x = non_neg_data$log_AA)
boxplot(non_neg_data$log_AA ~ non_neg_data$log_ATP)
hist(x = non_neg_data$ATP)
hist(x = non_neg_data$AA)
hist(x = non_neg_data$AminoAcid)
View(non_neg_data)
# plot(x = important_data$k_ribo_AA_a, y = important_data$k_ribo_a_AA, col = important_data$AminoAcid)
plot(x = non_neg_data$AminoAcid, y = non_neg_data$ATP)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP)
?plot
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_AA_a)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_a_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_a)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4)
non_neg_data$k_NH4
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a_NH4)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_cat_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a)
non_neg_data$k_a
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4)
View(important_data)
View(non_neg_data)
View(important_data)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a, main = "colored by k_a")
plot(y = non_neg_data$log_AA, x = non_neg_data$log_ATP, col = non_neg_data$k_a, main = "colored by k_a")
df1<- subset(non_neg_data, non_neg_data$k_a== 0.1)
df2<- subset(non_neg_data, non_neg_data$k_a== 10.0)
df3<- subset(non_neg_data, non_neg_data$k_a== 1000.0)
View(non_neg_data)
df2<- subset(non_neg_data, non_neg_data$k_a== '10.0')
df1<- subset(non_neg_data, non_neg_data$k_a== '0.1')
df2<- subset(non_neg_data, non_neg_data$k_a== '10.0')
df3<- subset(non_neg_data, non_neg_data$k_a== '1000.0')
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a, main = "colored by k_a")
plot(x = df1$log_AA, y = df1$log_ATP)
plot(x = df2$log_AA, y = df2$log_ATP, main = "k_a = 10")
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000")
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_a_NH4)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_NH4)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_a_AA)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_NH4_AA)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_ribo_a)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_ribo_a_AA)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_ribo_AA_a)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_cat_AA)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_a_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a, main = "colored by k_a")
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a_NH4)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_a)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_a_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_AA_a)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_AA_a)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a_AA)
non_neg_data$product<- non_neg_data$k_cat_AA* non_neg_data$k_a_NH4 * non_neg_data$k_a
?sum
?prod
non_neg_data$product<- prod(non_neg_data$k_cat_AA,non_neg_data$k_a_NH4, non_neg_data$k_a)
non_neg_data$product<- prod( as.integer(non_neg_data$k_cat_AA), as.integer(non_neg_data$k_a_NH4), as.integer(non_neg_data$k_a))
non_neg_data$product<- prod( as.integer(non_neg_data$k_cat_AA), as.integer(non_neg_data$k_a_NH4), as.integer(non_neg_data$k_a))
as.integer(non_neg_data$k_cat_AA)
non_neg_data$product<- prod(as.numeric(non_neg_data$k_cat_AA), as.numeric(non_neg_data$k_a_NH4), as.numeric(non_neg_data$k_a))
non_neg_data$product<- prod(as.numeric(non_neg_data$k_cat_AA), as.numeric(non_neg_data$k_a_NH4), as.numeric(non_neg_data$k_a))
as.numeric(non_neg_data$k_cat_AA)
non_neg_data$k_cat_AA
typeof(non_neg_data$k_cat_AA)
typeof(non_neg_data$k_a_NH4)
typeof(non_neg_data$k_a)
typeof(non_neg_data$product)
non_neg_data$product<- prod(non_neg_data$k_cat_AA, non_neg_data$k_a_NH4, non_neg_data$k_a)
non_neg_data$product<- non_neg_data$k_cat_AA * non_neg_data$k_a_NH4 * non_neg_data$k_a
?*
non_neg_data$product<- non_neg_data$k_cat_AA * non_neg_data$k_a_NH4
non_neg_data$product<- prod(as.numeric(as.character(non_neg_data$k_cat_AA)), as.numeric(as.character(non_neg_data$k_a_NH4)), as.numeric(as.character(non_neg_data$k_a)))
as.numeric(as.character(non_neg_data$k_cat_AA))
as.numeric(as.character(non_neg_data$k_a_NH4))
as.numeric(as.character(non_neg_data$k_a))
non_neg_data$product<- prod(as.numeric(as.character(non_neg_data$[,3])), as.numeric(as.character(non_neg_data$k_a_NH4)), as.numeric(as.character(non_neg_data$k_a)))
non_neg_data$product<- prod(as.numeric(as.character(non_neg_data[,3])), as.numeric(as.character(non_neg_data$k_a_NH4)), as.numeric(as.character(non_neg_data$k_a)))
non_neg_data$product<- prod(as.numeric(as.character(non_neg_data[,3])), as.numeric(as.character(non_neg_data[,4])), as.numeric(as.character(non_neg_data[,5])))
prod(as.numeric(as.character(non_neg_data[,3])), as.numeric(as.character(non_neg_data[,4])), as.numeric(as.character(non_neg_data[,5])))
non_neg_data$product<- as.numeric(as.character(non_neg_data[,3]))* as.numeric(as.character(non_neg_data[,4]))* as.numeric(as.character(non_neg_data[,5]))
non_neg_data$product<- as.numeric(as.character(non_neg_data[,3]))* as.numeric(as.character(non_neg_data[,4]))* as.numeric(as.character(non_neg_data[,5]))* as.numeric(as.character(non_neg_data[,6]))* as.numeric(as.character(non_neg_data[,7]))* as.numeric(as.character(non_neg_data[,8]))* as.numeric(as.character(non_neg_data[,9]))
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$product)
min(non_neg_data$product)
non_neg_data$product
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$product)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = log(non_neg_data$product))
non_neg_data$product_col<- log(non_neg_data$product)
min(non_neg_data$product_col)
non_neg_data$product_col<- non_neg_data$product_col + min(non_neg_data$product_col)
View(non_neg_data)
non_neg_data$product_col<- non_neg_data$product_col - min(non_neg_data$product_col)
View(non_neg_data)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$product_col)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_a_AA)
df1<- subset(non_neg_data, non_neg_data$k_a== '0.1')
df2<- subset(non_neg_data, non_neg_data$k_a== '10.0')
df3<- subset(non_neg_data, non_neg_data$k_a== '1000.0')
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$product_col)
View(non_neg_data)
non_neg_data <- subset(important_data, important_data$AminoAcid >= 0 & important_data$ATP >= 0)
non_neg_data$log_AA<- log(non_neg_data$AminoAcid)
non_neg_data$log_ATP<- log(non_neg_data$ATP)
non_neg_data$product<- as.numeric(as.character(non_neg_data[,3]))* as.numeric(as.character(non_neg_data[,4]))* as.numeric(as.character(non_neg_data[,5]))* as.numeric(as.character(non_neg_data[,6]))* as.numeric(as.character(non_neg_data[,7]))* as.numeric(as.character(non_neg_data[,8]))* as.numeric(as.character(non_neg_data[,9]))
non_neg_data$product_col<- log(non_neg_data$product)
non_neg_data$product_col<- non_neg_data$product_col - min(non_neg_data$product_col)
df1<- subset(non_neg_data, non_neg_data$k_a== '0.1')
df2<- subset(non_neg_data, non_neg_data$k_a== '10.0')
df3<- subset(non_neg_data, non_neg_data$k_a== '1000.0')
plot(x = df1$log_AA, y = df1$log_ATP, main = "k_a = 0.1")
plot(x = df2$log_AA, y = df2$log_ATP, main = "k_a = 10")
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$product_col)
plot(x = df3$log_AA, y = df3$log_ATP, main = "k_a = 1000", col = df3$k_ribo_AA_a)
df1<- subset(non_neg_data, non_neg_data$k_a== '0.1')
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_a, main = "colored by k_a")
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4_AA)
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_NH4_AA, main = "colored by k_NH4_AA")
plot(x = non_neg_data$log_AA, y = non_neg_data$log_ATP, col = non_neg_data$k_ribo_a_AA, main = "colored by k_NH4_AA")
